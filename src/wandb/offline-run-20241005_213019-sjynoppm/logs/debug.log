2024-10-05 21:30:19,115 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Current SDK version is 0.18.3
2024-10-05 21:30:19,115 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Configure stats pid to 13092
2024-10-05 21:30:19,115 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Loading settings from C:\Users\91628\.config\wandb\settings
2024-10-05 21:30:19,115 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Loading settings from C:\Users\91628\Desktop\AI Drone\src\wandb\settings
2024-10-05 21:30:19,115 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Loading settings from environment variables: {}
2024-10-05 21:30:19,115 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Applying setup settings: {'mode': None, '_disable_service': None}
2024-10-05 21:30:19,116 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Inferring run settings from compute environment: {'program_relpath': 'Desktop\\AI Drone\\src\\SAC\\training_model.py', 'program_abspath': 'c:\\Users\\91628\\Desktop\\AI Drone\\src\\SAC\\training_model.py', 'program': 'c:\\Users\\91628\\Desktop\\AI Drone\\src\\SAC\\training_model.py'}
2024-10-05 21:30:19,116 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Applying login settings: {}
2024-10-05 21:30:19,116 INFO    MainThread:13092 [wandb_setup.py:_flush():79] Applying login settings: {'mode': 'offline'}
2024-10-05 21:30:19,117 INFO    MainThread:13092 [wandb_init.py:_log_setup():532] Logging user logs to C:\Users\91628\Desktop\AI Drone\src\wandb\offline-run-20241005_213019-sjynoppm\logs\debug.log
2024-10-05 21:30:19,117 INFO    MainThread:13092 [wandb_init.py:_log_setup():533] Logging internal logs to C:\Users\91628\Desktop\AI Drone\src\wandb\offline-run-20241005_213019-sjynoppm\logs\debug-internal.log
2024-10-05 21:30:19,117 INFO    MainThread:13092 [wandb_init.py:init():617] calling init triggers
2024-10-05 21:30:19,117 INFO    MainThread:13092 [wandb_init.py:init():624] wandb.init called with sweep_config: {}
config: {}
2024-10-05 21:30:19,118 INFO    MainThread:13092 [wandb_init.py:init():667] starting backend
2024-10-05 21:30:19,118 INFO    MainThread:13092 [wandb_init.py:init():671] sending inform_init request
2024-10-05 21:30:19,125 INFO    MainThread:13092 [backend.py:_multiprocessing_setup():104] multiprocessing start_methods=spawn, using: spawn
2024-10-05 21:30:19,126 INFO    MainThread:13092 [wandb_init.py:init():684] backend started and connected
2024-10-05 21:30:19,141 INFO    MainThread:13092 [wandb_init.py:init():779] updated telemetry
2024-10-05 21:30:19,237 INFO    MainThread:13092 [wandb_init.py:init():812] communicating run to backend with 90.0 second timeout
2024-10-05 21:30:19,524 INFO    MainThread:13092 [wandb_init.py:init():863] starting run threads in backend
2024-10-05 21:30:21,171 INFO    MainThread:13092 [wandb_run.py:_console_start():2465] atexit reg
2024-10-05 21:30:21,172 INFO    MainThread:13092 [wandb_run.py:_redirect():2313] redirect: wrap_raw
2024-10-05 21:30:21,172 INFO    MainThread:13092 [wandb_run.py:_redirect():2378] Wrapping output streams.
2024-10-05 21:30:21,172 INFO    MainThread:13092 [wandb_run.py:_redirect():2403] Redirects installed.
2024-10-05 21:30:21,179 INFO    MainThread:13092 [wandb_init.py:init():907] run started, returning control to user process
2024-10-05 21:30:25,109 INFO    MainThread:13092 [wandb_run.py:_tensorboard_callback():1556] tensorboard callback: tmp/SAC_5, True
2024-10-05 21:30:25,156 INFO    MainThread:13092 [wandb_watch.py:watch():67] Watching
2024-10-05 21:30:25,158 INFO    MainThread:13092 [wandb_run.py:_config_callback():1394] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'stable_baselines3.sac.policies.SACPolicy'>", 'device': 'cpu', 'verbose': 1, 'policy_kwargs': "{'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 10000000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1728144025106230900, 'learning_rate': 0.0003, 'tensorboard_log': 'tmp/', '_last_obs': '[[ 0.          0.          0.          2.294523   -0.06279941 -0.06279941\n   2.294523    2.604209   -0.05686171 -0.05686171]]', '_last_episode_starts': '[ True]', '_last_original_obs': '[[-0.05786482  1.3953757   0.0052029   1.484134    0.65466386  1.4570777\n   1.484134    1.0290239   2.2037616   3.0061753 ]]', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 0.9900001, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 99899, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x0000024B7A95DCF0>', '_vec_normalize_env': 'None', 'observation_space': 'Box(-inf, inf, (10,), float32)', 'action_space': 'Box(-1.0, 1.0, (2,), float32)', 'n_envs': 1, 'buffer_size': 1000000, 'batch_size': 256, 'learning_starts': 100, 'tau': 0.005, 'gamma': 0.99, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.ReplayBuffer object at 0x0000024B7A95E4A0>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.ReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -2.0, 'log_ent_coef': 'tensor([-1.6427], requires_grad=True)', 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function get_schedule_fn.<locals>.<lambda> at 0x0000024B7A928C10>', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', 'policy': 'SACPolicy(\n  (actor): Actor(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (latent_pi): Sequential(\n      (0): Linear(in_features=10, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n    )\n    (mu): Linear(in_features=256, out_features=2, bias=True)\n    (log_std): Linear(in_features=256, out_features=2, bias=True)\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=12, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=12, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): FlattenExtractor(\n      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=12, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=12, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n)', 'actor': 'Actor(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=10, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=2, bias=True)\n  (log_std): Linear(in_features=256, out_features=2, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=12, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=12, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1, end_dim=-1)\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=12, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=12, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', '_logger': '<stable_baselines3.common.logger.Logger object at 0x0000024B06028DF0>'}
2024-10-06 00:12:45,784 INFO    MainThread:13092 [sb3.py:save_model():153] Saving model checkpoint to models/sjynoppm\model.zip
